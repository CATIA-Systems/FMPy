name: Build FMPy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-binaries:
    strategy:
      matrix:
        include:
          - name: windows
            image: windows-2022
          - name: linux
            image: ubuntu-20.04
          - name: darwin
            image: macos-13
    runs-on: ${{ matrix.image }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - run: python -m pip install fmpy requests toml
    - run: |
        cd native
        python build_cvode.py
    - run: |
        cd native
        python build_binaries.py
    - if: matrix.name == 'linux' || matrix.name == 'windows'
      run: |
        cd native
        python build_remoting.py
    - uses: actions/upload-artifact@v4
      with:
       name: ${{ matrix.name }}
       path: |
         *.exe
         *.dll
         *.dylib
         *.so
         server_tcp
       if-no-files-found: error
#  merge-wheels:
#    runs-on: ubuntu-22.04
#    needs: [ build-wheels ]
#    steps:
#    - uses: actions/checkout@v4
#    - uses: actions/download-artifact@v4
#      with:
#        name: linux
#        path: wheels/linux
#    - uses: actions/download-artifact@v4
#      with:
#        name: darwin
#        path: wheels/darwin
#    - uses: actions/download-artifact@v4
#      with:
#        name: windows
#        path: wheels/windows
#    - uses: actions/setup-python@v5
#      with:
#        python-version: '3.10'
#    - run: python merge_wheels.py
#    - uses: actions/upload-artifact@v4
#      with:
#       name: merged
#       path: wheels/merged
#       if-no-files-found: error
#  run-tests:
#    strategy:
#      matrix:
#        include:
#          - name: windows
#            image: windows-2022
#          - name: linux
#            image: ubuntu-22.04
#          - name: darwin
#            image: macos-13
#    runs-on: ${{ matrix.image }}
#    needs: [ merge-wheels ]
#    steps:
#    - uses: actions/checkout@v4
#      with:
#        submodules: 'true'
#    - uses: JesseTG/rm@b0586afffd89db69f7309bd44cc90209173fdbbe
#      with:
#        path: fmpy
#    - uses: actions/download-artifact@v4
#      with:
#        name: merged
#        path: .
#    - run: ls
#    - uses: actions/setup-python@v5
#      with:
#        python-version: '3.10'
#    - if: matrix.name == 'linux' || matrix.name == 'darwin'
#      run: |
#        for f in FMPy-*.whl; do
#          python -m pip install $f[complete]
#        done
#    - if: matrix.name == 'windows'
#      run: |
#        $files = Get-ChildItem "FMPy-*.whl"
#        foreach ($f in $files) {
#          $name =  $f.FullName + "[complete]"
#          python -m pip install $name
#        }
#    - run: python -m pip install pytest
#    - run: pytest tests
